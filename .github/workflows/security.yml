name: Security Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write
  security-events: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ github.token }}

      - name: Set up python
        uses: actions/setup-python@v5

  semgrep:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep:latest
    steps:
      - uses: actions/checkout@v4

      - name: Create reports directory
        run: mkdir -p reports
      
      - name: Semgrep Security Scan with Autofix
        run: |
          semgrep scan \
            --config "p/python" \
            --config "p/secrets" \
            --config "p/owasp-top-ten" \
            --output reports/semgrep-results.sarif \
            --sarif \
            --autofix || true
          
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: reports/semgrep-results.sarif

          
      - name: Upload Semgrep Results
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-results
          path: reports/semgrep-results.sarif
          retention-days: 14

  zap_scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run DSVPWA
        run: python dsvpwa.py &

      - name: Prepare ZAP Environment
        run: |
          sudo mkdir -p /zap/wrk
          sudo chown -R $USER:$USER /zap
          sudo chmod -R 755 /zap
          ls -la /zap
          ls -la /zap/wrk

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://127.0.0.1:65413'
          cmd_options: '-I'
          rules_file_name: '.zap/rules.tsv'
          allow_issue_writing: false
          fail_action: false

      - name: Upload ZAP Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-results
          path: |
            zap-*
            *.html
          retention-days: 5
  
  # dependency_check:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
      # - uses: actions/checkout@v4
      
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'
  #         cache: 'maven'

  #     - name: Create reports directory
  #       run: mkdir -p reports

  #     - name: Run OWASP Dependency Check
  #       run: |
  #         mvn org.owasp:dependency-check-maven:check \
  #         -Dformat=HTML \
  #         -DoutputDirectory=reports \
  #         -DsuppressionFile=suppression.xml || true

  #     - name: Upload Dependency Check Results
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: dependency-check-results
  #         path: reports/dependency-check-report.html
  #         retention-days: 14

  publish_security_reports:
    needs: [semgrep, zap_scan]
    # needs: [semgrep, zap_scan, dependency_check]
    runs-on: ubuntu-latest
    steps:
      - name: Create reports directory
        run: mkdir -p combined-reports

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: combined-reports

      - name: Prepare reports
        run: |
          cd combined-reports
          find . -type f -exec mv {} ./ \;
          rm -rf */

      - name: Archive Security Results
        uses: actions/upload-artifact@v3
        with:
          name: security-reports-bundle
          path: combined-reports/*
          retention-days: 14

  cleanup:
    needs: publish_security_reports
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Remove temporary artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            semgrep-results
            zap-results
            # dependency-check-results

  # notify:
  #   needs: [semgrep, zap_scan, dependency_check]
  #   runs-on: ubuntu-latest
  #   if: always()
  #   steps:
  #     - name: Send notification
  #       uses: nvdaes/github-action-workflow-notification@v1
  #       with:
  #         notification_title: 'Security Scan Results'
  #         notification_body: |
  #           Security scan completed for ${{github.repository}}
            
  #           Results summary:
  #           - Semgrep scan: ${{needs.semgrep.result}}
  #           - ZAP scan: ${{needs.zap_scan.result}}
  #           - Dependency check: ${{needs.dependency_check.result}}
            
  #           Check full results here:
  #           ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}
  #         notification_type: 'email'